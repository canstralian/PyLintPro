name: CRDA Scan

on:
  workflow_call:
    secrets:
      CRDA_KEY:
        required: true
      SNYK_TOKEN:
        required: false
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running this workflow'
        required: true
        default: 'Manual trigger'
  pull_request_target:
    branches: [ "main" ]
    types: [ assigned, opened, synchronize, reopened, labeled, edited ]

permissions:
  contents: read

jobs:
  crda-scan:
    if: secrets.CRDA_KEY
    permissions:
      contents: read
      security-events: write
    name: Scan project vulnerabilities with CRDA
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install CRDA CLI
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          github_pat: ${{ github.token }}
          crda: "latest"

      - name: Verify CRDA Installation
        run: crda version

      - name: CRDA Scan
        id: scan
        uses: redhat-actions/crda@v1
        with:
          crda_key: ${{ secrets.CRDA_KEY }}
